{"remainingRequest":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/babel-loader/lib/index.js!/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidfreitas/Documents/Projetos/app-to-do/web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/src/App.vue","mtime":1653839277901},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/cache-loader/dist/cjs.js","mtime":1653837351742},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/babel-loader/lib/index.js","mtime":1653837352205},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/cache-loader/dist/cjs.js","mtime":1653837351742},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/vue-loader/lib/index.js","mtime":1653837349350}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TaskProgress from './components/TaskProgress.vue';\nimport TaskGrid from './components/TaskGrid.vue';\nimport NewTask from './components/NewTask.vue';\nexport default {\n  components: {\n    TaskProgress: TaskProgress,\n    NewTask: NewTask,\n    TaskGrid: TaskGrid\n  },\n  data: function data() {\n    return {\n      tasks: []\n    };\n  },\n  computed: {\n    progress: function progress() {\n      var total = this.tasks.length;\n      var done = this.tasks.filter(function (t) {\n        return !t.pending;\n      }).length;\n      return Math.round(done / total * 100) || 0;\n    }\n  },\n  watch: {\n    tasks: {\n      deep: true,\n      handler: function handler() {\n        localStorage.setItem('tasks', JSON.stringify(this.tasks));\n      }\n    }\n  },\n  methods: {\n    taskAdd: function taskAdd(task) {\n      if (task.name != '') {\n        var sameName = function sameName(t) {\n          return t.name === task.name;\n        };\n\n        var reallyNew = this.tasks.filter(sameName).length == 0;\n\n        if (reallyNew) {\n          this.tasks.unshift({\n            name: task.name,\n            pending: task.pending || true\n          });\n        }\n      } else {\n        alert('Digite o nome da tarefa antes de adicionar');\n      }\n    },\n    deleteTask: function deleteTask(i) {\n      this.tasks.splice(i, 1);\n    },\n    toggleTaskState: function toggleTaskState(i) {\n      this.tasks[i].pending = !this.tasks[i].pending;\n    }\n  },\n  created: function created() {\n    var json = localStorage.getItem('tasks');\n    var array = JSON.parse(json) || [];\n    this.tasks = Array.isArray(array) ? array : [];\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA,OAAA,YAAA,MAAA,+BAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AACA,OAAA,OAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,YAAA,EAAA,YAAA;AAAA,IAAA,OAAA,EAAA,OAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,OAAA;AAAA,OAAA,EAAA,MAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,GAAA,KAAA,GAAA,GAAA,KAAA,CAAA;AACA;AALA,GAPA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAFA,qBAEA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,KAAA,CAAA;AACA;AAJA;AADA,GAdA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,UAAA,IAAA,CAAA,IAAA,IAAA,EAAA,EAAA;AACA,YAAA,QAAA,GAAA,SAAA,QAAA,CAAA,CAAA;AAAA,iBAAA,CAAA,CAAA,IAAA,KAAA,IAAA,CAAA,IAAA;AAAA,SAAA;;AACA,YAAA,SAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA,QAAA,EAAA,MAAA,IAAA,CAAA;;AACA,YAAA,SAAA,EAAA;AACA,eAAA,KAAA,CAAA,OAAA,CAAA;AACA,YAAA,IAAA,EAAA,IAAA,CAAA,IADA;AAEA,YAAA,OAAA,EAAA,IAAA,CAAA,OAAA,IAAA;AAFA,WAAA;AAIA;AACA,OATA,MASA;AACA,QAAA,KAAA,CAAA,4CAAA,CAAA;AACA;AACA,KAdA;AAeA,IAAA,UAfA,sBAeA,CAfA,EAeA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACA,KAjBA;AAkBA,IAAA,eAlBA,2BAkBA,CAlBA,EAkBA;AACA,WAAA,KAAA,CAAA,CAAA,EAAA,OAAA,GAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAA;AACA;AApBA,GAtBA;AA4CA,EAAA,OA5CA,qBA4CA;AACA,QAAA,IAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,QAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,KAAA,EAAA;AACA,SAAA,KAAA,GAAA,KAAA,CAAA,OAAA,CAAA,KAAA,IAAA,KAAA,GAAA,EAAA;AACA;AAhDA,CAAA","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<main>\n\t\t\t<h1>Lista de Tarefas</h1>\n\t\t\t<TaskProgress :progress=\"progress\"/>\n\t\t\t<NewTask @taskAdded=\"taskAdd\"/>\n\t\t\t<TaskGrid @taskDeleted=\"deleteTask\" @taskStateChanged=\"toggleTaskState\" :tasks=\"tasks\"/>\n\t\t</main>\n\t</div>\n</template>\n\n<script>\n\timport TaskProgress from './components/TaskProgress.vue'\n    import TaskGrid from './components/TaskGrid.vue'\n\timport NewTask from './components/NewTask.vue'\n\n\texport default {\n\t\tcomponents: { TaskProgress, NewTask, TaskGrid },\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\ttasks: []\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tprogress() {\n\t\t\t\tconst total = this.tasks.length\n\t\t\t\tconst done = this.tasks.filter(t => !t.pending).length\n\t\t\t\treturn Math.round(done / total * 100) || 0\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\ttasks: {\n\t\t\t\tdeep: true,\n\t\t\t\thandler() {\n\t\t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(this.tasks))\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\ttaskAdd(task) {\n\t\t\t\tif (task.name != '') {\n\t\t\t\t\tconst sameName = t => t.name === task.name\n\t\t\t\t\tconst reallyNew = this.tasks.filter(sameName).length == 0\n\t\t\t\t\tif (reallyNew) {\n\t\t\t\t\t\tthis.tasks.unshift({\n\t\t\t\t\t\t\tname: task.name,\n\t\t\t\t\t\t\tpending: task.pending || true\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert('Digite o nome da tarefa antes de adicionar')\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeleteTask(i) {\n\t\t\t\tthis.tasks.splice(i, 1)\n\t\t\t},\n\t\t\ttoggleTaskState(i) {\n\t\t\t\tthis.tasks[i].pending = !this.tasks[i].pending\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tconst json = localStorage.getItem('tasks')\n\t\t\tconst array = JSON.parse(json) || []\n\t\t\tthis.tasks = Array.isArray(array) ? array : []\n\t\t}\n\t}\n</script>\n\n<style>\n\t* {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\tbody {\n\t\tcolor: #fff;\n\t\tfont-family: 'Poppins', sans-serif;\n\t\tbackground: linear-gradient(to right, rgb(22, 34, 42), rgb(58, 96, 115));\n\t}\n\n\t#app {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: top;\n\t\talign-items: center;\n\t\theight: 100vh;\n\t}\n\n\tmain {\n\t\twidth: 80%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: top;\n\t\talign-items: center;\n\t}\n\n\th1 {\n\t\tfont-weight: 500;\n\t\tmargin: 1.5rem 0 1rem 0;\n\t}\n\n\t@media screen and (max-width: 992px) {\n\t\tmain {\n\t\t\twidth: 90%;\n\t\t}\n\t}\n\n\t@media screen and (max-width: 768px) {\n\t\tmain {\n\t\t\twidth: 95%;\n\t\t}\n\t}\n</style>\n"],"sourceRoot":"src"}]}