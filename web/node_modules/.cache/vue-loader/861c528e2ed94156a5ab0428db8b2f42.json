{"remainingRequest":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidfreitas/Documents/Projetos/app-to-do/web/src/components/ModalConfirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/src/components/ModalConfirm.vue","mtime":1653836761840},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/cache-loader/dist/cjs.js","mtime":1653837351742},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/babel-loader/lib/index.js","mtime":1653837352205},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/cache-loader/dist/cjs.js","mtime":1653837351742},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/vue-loader/lib/index.js","mtime":1653837349350}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            listName: null,\n            modalSave: false,\n            modalClear: false,\n            message: null\n        }\n    },\n    methods: {\n        showModal(clearMessage, code) {\n            this.message = clearMessage\n            if (code) {\n                this.modalSave = true\n            } else {\n                this.modalClear = true\n            }\n        },\n        handleSave() {\n            this.$emit('saveTask')\n            this.modalSave = false\n        },\n        handleConfirm() {\n            this.modalClear = false\n            this.message = 'Como deseja chamar esta lista?'\n            this.modalSave = true\n        },\n        handleClear() {\n            this.$emit('clearTasks')\n            this.modalClear = false\n        }\n    }\n}\n",{"version":3,"sources":["ModalConfirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalConfirm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"modal-confirm animate__animated animate__fadeIn\" v-if=\"modalSave || modalClear\">\n        <div class=\"modal-content animate__animated animate__bounceInDown\">\n            <template v-if=\"modalSave\">\n                <span class=\"close\" @click=\"modalSave = false\">&times;</span>\n                <h4>{{ message }}</h4>\n                <input type=\"text\" v-model=\"listName\">\n                <div class=\"modal-actions\">\n                    <button class=\"confirm\" @click=\"handleSave\">Confirmar</button>\n                </div>\n            </template>\n            <template v-if=\"modalClear\">\n                <span class=\"close\" @click=\"modalClear = false\">&times;</span>\n                <h4>{{ message }}</h4>\n                <div class=\"modal-actions\">\n                    <button class=\"confirm\" @click=\"handleConfirm\">Sim</button>\n                    <button class=\"cancel\" @click=\"handleClear\">NÃ£o</button>\n                </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            listName: null,\n            modalSave: false,\n            modalClear: false,\n            message: null\n        }\n    },\n    methods: {\n        showModal(clearMessage, code) {\n            this.message = clearMessage\n            if (code) {\n                this.modalSave = true\n            } else {\n                this.modalClear = true\n            }\n        },\n        handleSave() {\n            this.$emit('saveTask')\n            this.modalSave = false\n        },\n        handleConfirm() {\n            this.modalClear = false\n            this.message = 'Como deseja chamar esta lista?'\n            this.modalSave = true\n        },\n        handleClear() {\n            this.$emit('clearTasks')\n            this.modalClear = false\n        }\n    }\n}\n</script>\n\n<style scoped>\n/* The Modal (background) */\n.modal-confirm {\n    position: fixed; /* Stay in place */\n    z-index: 1; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n/* Modal Content/Box */\n.modal-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    color: #3c3c3c;\n    align-items: center;\n    text-align: center;\n    background-color: #fefefe;\n    margin: 25% auto; /* 15% from the top and centered */\n    padding: 20px;\n    border: 1px solid #888;\n    border-radius: 7px;\n    width: 80%; /* Could be more or less, depending on screen size */\n}\n\n.modal-content h4 {\n    margin-top: 1rem;\n}\n\n.modal-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\ninput {\n    width: 70%;\n    height: 45px;\n    padding: 0 15px;\n    margin-top: .75rem;\n    color: #6c6c6c;\n    font-size: 1rem;\n    letter-spacing: .75px;\n    outline: none;\n    border: 1px solid #c5c4c4;\n    border-radius: 5px;\n}\n\n.confirm {\n    outline: none;\n    border: none;\n    color: #fff;\n    margin: 1rem .25rem;\n    padding: .75rem 1.3rem;\n    text-transform: uppercase;\n    border-radius: 7px;\n    background-color: lightseagreen;\n    cursor: pointer;\n}\n\n.cancel {\n    outline: none;\n    border: none;\n    color: #fff;\n    margin: 1rem .25rem;\n    padding: .75rem 1.3rem;\n    text-transform: uppercase;\n    border-radius: 7px;\n    background-color: gray;\n    cursor: pointer;\n}\n\n.close {\n    position: relative;\n    color: #aaa;\n    font-size: 28px;\n    font-weight: bold;\n    margin-top: -25px;\n    margin-right: -13px;\n    align-self: flex-end;\n}\n.close:hover,\n.close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n@media only screen and (min-width: 768px) {\t\t\t\n    .modal-content {\n        width: 35%;\n        margin: 10% auto; /* 15% from the top and centered */\n    }\n}\n\n@media only screen and (min-width: 960px) {\t\t\t\n    .modal-content {\n        width: 25%;\n    }\n}\n</style>"]}]}