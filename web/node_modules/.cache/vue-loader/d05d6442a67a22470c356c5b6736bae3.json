{"remainingRequest":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/davidfreitas/Documents/Projetos/app-to-do/web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/src/App.vue","mtime":1653848788812},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/cache-loader/dist/cjs.js","mtime":1653849071628},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/babel-loader/lib/index.js","mtime":1653849072053},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/cache-loader/dist/cjs.js","mtime":1653849071628},{"path":"/Users/davidfreitas/Documents/Projetos/app-to-do/web/node_modules/vue-loader/lib/index.js","mtime":1653849072455}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\timport TaskProgress from './components/TaskProgress.vue'\n    import TaskGrid from './components/TaskGrid.vue'\n\timport NewTask from './components/NewTask.vue'\n\n\texport default {\n\t\tcomponents: { TaskProgress, NewTask, TaskGrid },\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\ttasks: []\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tprogress() {\n\t\t\t\tconst total = this.tasks.length\n\t\t\t\tconst done = this.tasks.filter(t => !t.pending).length\n\t\t\t\treturn Math.round(done / total * 100) || 0\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\ttasks: {\n\t\t\t\tdeep: true,\n\t\t\t\thandler() {\n\t\t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(this.tasks))\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\ttaskAdd(task) {\n\t\t\t\tif (task.name != '') {\n\t\t\t\t\tconst sameName = t => t.name === task.name\n\t\t\t\t\tconst reallyNew = this.tasks.filter(sameName).length == 0\n\t\t\t\t\tif (reallyNew) {\n\t\t\t\t\t\tthis.tasks.unshift({\n\t\t\t\t\t\t\tname: task.name,\n\t\t\t\t\t\t\tpending: task.pending || true\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert('Digite o nome da tarefa antes de adicionar')\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeleteTask(i) {\n\t\t\t\tthis.tasks.splice(i, 1)\n\t\t\t},\n\t\t\ttoggleTaskState(i) {\n\t\t\t\tthis.tasks[i].pending = !this.tasks[i].pending\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tconst json = localStorage.getItem('tasks')\n\t\t\tconst array = JSON.parse(json) || []\n\t\t\tthis.tasks = Array.isArray(array) ? array : []\n\t\t}\n\t}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<main>\n\t\t\t<h1>Lista de Tarefas</h1>\n\t\t\t<TaskProgress :progress=\"progress\"/>\n\t\t\t<NewTask @taskAdded=\"taskAdd\"/>\n\t\t\t<TaskGrid @taskDeleted=\"deleteTask\" @taskStateChanged=\"toggleTaskState\" :tasks=\"tasks\"/>\n\t\t</main>\n\t</div>\n</template>\n\n<script>\n\timport TaskProgress from './components/TaskProgress.vue'\n    import TaskGrid from './components/TaskGrid.vue'\n\timport NewTask from './components/NewTask.vue'\n\n\texport default {\n\t\tcomponents: { TaskProgress, NewTask, TaskGrid },\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\ttasks: []\n\t\t\t}\n\t\t},\n\t\tcomputed: {\n\t\t\tprogress() {\n\t\t\t\tconst total = this.tasks.length\n\t\t\t\tconst done = this.tasks.filter(t => !t.pending).length\n\t\t\t\treturn Math.round(done / total * 100) || 0\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\ttasks: {\n\t\t\t\tdeep: true,\n\t\t\t\thandler() {\n\t\t\t\t\tlocalStorage.setItem('tasks', JSON.stringify(this.tasks))\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\ttaskAdd(task) {\n\t\t\t\tif (task.name != '') {\n\t\t\t\t\tconst sameName = t => t.name === task.name\n\t\t\t\t\tconst reallyNew = this.tasks.filter(sameName).length == 0\n\t\t\t\t\tif (reallyNew) {\n\t\t\t\t\t\tthis.tasks.unshift({\n\t\t\t\t\t\t\tname: task.name,\n\t\t\t\t\t\t\tpending: task.pending || true\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert('Digite o nome da tarefa antes de adicionar')\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeleteTask(i) {\n\t\t\t\tthis.tasks.splice(i, 1)\n\t\t\t},\n\t\t\ttoggleTaskState(i) {\n\t\t\t\tthis.tasks[i].pending = !this.tasks[i].pending\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tconst json = localStorage.getItem('tasks')\n\t\t\tconst array = JSON.parse(json) || []\n\t\t\tthis.tasks = Array.isArray(array) ? array : []\n\t\t}\n\t}\n</script>\n\n<style>\n\t* {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbox-sizing: border-box;\n\t}\n\t\n\tbody {\n\t\tcolor: #fff;\n\t\tfont-family: 'Poppins', sans-serif;\n\t\tbackground: linear-gradient(to right, rgb(22, 34, 42), rgb(58, 96, 115));\n\t}\n\n\t#app {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: top;\n\t\talign-items: center;\n\t\theight: 100vh;\n\t}\n\n\tmain {\n\t\twidth: 80%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: top;\n\t\talign-items: center;\n\t}\n\n\th1 {\n\t\tfont-weight: 500;\n\t\tmargin: 1.5rem 0 1rem 0;\n\t}\n\n\t@media screen and (max-width: 992px) {\n\t\tmain {\n\t\t\twidth: 90%;\n\t\t}\n\t}\n\n\t@media screen and (max-width: 768px) {\n\t\tmain {\n\t\t\twidth: 95%;\n\t\t}\n\t}\n</style>\n"]}]}